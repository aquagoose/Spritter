#include "SDLUtils.h"

namespace Spritter
{
    Key SDLUtils::KeycodeToKey(const SDL_Keycode keycode)
    {
        switch (keycode)
        {
            case SDLK_RETURN:
                return Key::Return;
            case SDLK_ESCAPE:
                return Key::Escape;
            case SDLK_BACKSPACE:
                return Key::Backspace;
            case SDLK_TAB:
                return Key::Tab;
            case SDLK_SPACE:
                return Key::Space;
            case SDLK_HASH:
                return Key::Hash;
            case SDLK_APOSTROPHE:
                return Key::Apostrophe;
            case SDLK_COMMA:
                return Key::Comma;
            case SDLK_MINUS:
                return Key::Minus;
            case SDLK_PERIOD:
                return Key::Period;
            case SDLK_SLASH:
                return Key::ForwardSlash;

            case SDLK_0:
                return Key::Num0;
            case SDLK_1:
                return Key::Num1;
            case SDLK_2:
                return Key::Num2;
            case SDLK_3:
                return Key::Num3;
            case SDLK_4:
                return Key::Num4;
            case SDLK_5:
                return Key::Num5;
            case SDLK_6:
                return Key::Num6;
            case SDLK_7:
                return Key::Num7;
            case SDLK_8:
                return Key::Num8;
            case SDLK_9:
                return Key::Num9;

            case SDLK_SEMICOLON:
                return Key::Semicolon;
            case SDLK_EQUALS:
                return Key::Equals;
            case SDLK_LEFTBRACKET:
                return Key::LeftBracket;
            case SDLK_RIGHTBRACKET:
                return Key::RightBracket;
            case SDLK_BACKSLASH:
                return Key::Backslash;
            case SDLK_GRAVE:
                return Key::Backquote;

            case SDLK_A:
                return Key::A;
            case SDLK_B:
                return Key::B;
            case SDLK_C:
                return Key::C;
            case SDLK_D:
                return Key::D;
            case SDLK_E:
                return Key::E;
            case SDLK_F:
                return Key::F;
            case SDLK_G:
                return Key::G;
            case SDLK_H:
                return Key::H;
            case SDLK_I:
                return Key::I;
            case SDLK_J:
                return Key::J;
            case SDLK_K:
                return Key::K;
            case SDLK_L:
                return Key::L;
            case SDLK_M:
                return Key::M;
            case SDLK_N:
                return Key::N;
            case SDLK_O:
                return Key::O;
            case SDLK_P:
                return Key::P;
            case SDLK_Q:
                return Key::Q;
            case SDLK_R:
                return Key::R;
            case SDLK_S:
                return Key::S;
            case SDLK_T:
                return Key::T;
            case SDLK_U:
                return Key::U;
            case SDLK_V:
                return Key::V;
            case SDLK_W:
                return Key::W;
            case SDLK_X:
                return Key::X;
            case SDLK_Y:
                return Key::Y;
            case SDLK_Z:
                return Key::Z;

            case SDLK_DELETE:
                return Key::Delete;
            case SDLK_CAPSLOCK:
                return Key::CapsLock;

            case SDLK_F1:
                return Key::F1;
            case SDLK_F2:
                return Key::F2;
            case SDLK_F3:
                return Key::F3;
            case SDLK_F4:
                return Key::F4;
            case SDLK_F5:
                return Key::F5;
            case SDLK_F6:
                return Key::F6;
            case SDLK_F7:
                return Key::F7;
            case SDLK_F8:
                return Key::F8;
            case SDLK_F9:
                return Key::F9;
            case SDLK_F10:
                return Key::F10;
            case SDLK_F11:
                return Key::F11;
            case SDLK_F12:
                return Key::F12;
            case SDLK_F13:
                return Key::F13;
            case SDLK_F14:
                return Key::F14;
            case SDLK_F15:
                return Key::F15;
            case SDLK_F16:
                return Key::F16;
            case SDLK_F17:
                return Key::F17;
            case SDLK_F18:
                return Key::F18;
            case SDLK_F19:
                return Key::F19;
            case SDLK_F20:
                return Key::F20;
            case SDLK_F21:
                return Key::F21;
            case SDLK_F22:
                return Key::F22;
            case SDLK_F23:
                return Key::F23;
            case SDLK_F24:
                return Key::F24;

            case SDLK_PRINTSCREEN:
                return Key::PrintScreen;
            case SDLK_SCROLLLOCK:
                return Key::ScrollLock;
            case SDLK_PAUSE:
                return Key::Pause;
            case SDLK_INSERT:
                return Key::Insert;
            case SDLK_HOME:
                return Key::Home;
            case SDLK_END:
                return Key::End;
            case SDLK_PAGEUP:
                return Key::PageUp;
            case SDLK_PAGEDOWN:
                return Key::PageDown;

            case SDLK_RIGHT:
                return Key::Right;
            case SDLK_LEFT:
                return Key::Left;
            case SDLK_UP:
                return Key::Up;
            case SDLK_DOWN:
                return Key::Down;

            case SDLK_NUMLOCKCLEAR:
                return Key::NumLock;
            case SDLK_KP_DIVIDE:
                return Key::KeypadDivide;
            case SDLK_KP_MULTIPLY:
                return Key::KeypadMultiply;
            case SDLK_KP_MINUS:
                return Key::KeypadSubtract;
            case SDLK_KP_PLUS:
                return Key::KeypadAdd;
            case SDLK_KP_ENTER:
                return Key::KeypadEnter;
            case SDLK_KP_DECIMAL:
                return Key::KeypadDecimal;
            case SDLK_KP_EQUALS:
                return Key::KeypadEqual;

            case SDLK_KP_0:
                return Key::Keypad0;
            case SDLK_KP_1:
                return Key::Keypad1;
            case SDLK_KP_2:
                return Key::Keypad2;
            case SDLK_KP_3:
                return Key::Keypad3;
            case SDLK_KP_4:
                return Key::Keypad4;
            case SDLK_KP_5:
                return Key::Keypad5;
            case SDLK_KP_6:
                return Key::Keypad6;
            case SDLK_KP_7:
                return Key::Keypad7;
            case SDLK_KP_8:
                return Key::Keypad8;
            case SDLK_KP_9:
                return Key::Keypad9;

            case SDLK_MENU:
                return Key::Menu;
            case SDLK_LCTRL:
                return Key::LeftControl;
            case SDLK_RCTRL:
                return Key::RightControl;
            case SDLK_LALT:
                return Key::LeftAlt;
            case SDLK_RALT:
                return Key::RightAlt;
            case SDLK_LSHIFT:
                return Key::LeftShift;
            case SDLK_RSHIFT:
                return Key::RightShift;
            case SDLK_LGUI:
                return Key::LeftSuper;
            case SDLK_RGUI:
                return Key::RightSuper;

            default:
                return Key::Unknown;
        }
    }

    MouseButton SDLUtils::ButtonIndexToButton(const Uint8 button)
    {
        return static_cast<MouseButton>(button);
    }
}